### Starting build.
# Target: a0.ml.depends, tags: { extension:ml, file:a0.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules a0.ml > a0.ml.depends # cached
# Target: a0.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:a0.cmo, file:a0.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o a0.cmo a0.ml # cached
# Target: a1.ml.depends, tags: { extension:ml, file:a1.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules a1.ml > a1.ml.depends
# Target: a1.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:a1.cmo, file:a1.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o a1.cmo a1.ml
+ /usr/bin/ocamlc.opt -c -o a1.cmo a1.ml
File "a1.ml", line 54, characters 12-124:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
""
File "a1.ml", line 324, characters 97-98:
Warning 20: this argument will not be used by the function.
File "a1.ml", line 375, characters 65-406:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
([], _)
(However, some guarded clause may match this value.)
File "a1.ml", line 388, characters 48-55:
Warning 26: unused variable get_nth.
File "a1.ml", line 385, characters 17-32:
Warning 11: this match case is unused.
# Target: a2.mll, tags: { extension:mll, file:a2.mll, lexer, ocaml, ocamllex, quiet }
/usr/bin/ocamllex.opt -q a2.mll # cached
# Target: a2.ml.depends, tags: { extension:ml, file:a2.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules a2.ml > a2.ml.depends # cached
# Target: a3.mly, tags: { extension:mly, file:a3.mly, infer, ocaml, ocamlyacc, parser, quiet }
/usr/bin/ocamlyacc a3.mly # cached
# Target: a3.mli.depends, tags: { extension:mli, file:a3.mli, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules a3.mli > a3.mli.depends # cached
# Target: a3.cmi, tags: { byte, compile, extension:mli, file:a3.mli, interf, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o a3.cmi a3.mli
# Target: a2.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:a2.cmo, file:a2.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o a2.cmo a2.ml
# Target: a3.ml.depends, tags: { extension:ml, file:a3.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules a3.ml > a3.ml.depends # cached
# Target: a3.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:a3.cmo, file:a3.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o a3.cmo a3.ml
# Compilation successful.
