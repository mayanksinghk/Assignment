# 1 "a2.mll"
  type token =
|   INT of int          (* integer constant, positive or negative w/o leading zeros *)
|  TRUE                (* boolean constant "T" *)
|  FALSE               (* boolean constant "F" *)

|  ABS                 (* unary operator, "abs" *)
|  PLUS                (* arithmetic plus, "+" *)
|  MINUS               (* arithmetic minus, "-" *)
|  MUL                 (* arithmetic multiply, "*" *)
|  DIV                 (* integer div, "div" *)
|  REM                 (* remainder, "mod" *)
|  TILDA                 (* unaryminus, "~" *)

|  LP                  (* left paren, "(" *)
|  RP                  (* right paren, ")" *)

|  NOT                 (* boolean NOT, "not" *)
|  CONJ                (* boolean AND, "/\ " *)
|  DISJ                (* boolean OR, "\/" *)


|  EQ                  (* equal to, "=" *)
|  GT                  (* greater than, ">" *)
|  LT                  (* less than, "<" *)


|  IF                  (* keyword "if" *)
|  THEN                (* keyword "then" *)
|  ELSE                (* keyword "else" *)
|  FI                  (* keyword "fi "*)

| COMMA                (* comma for tuples ","*)
| PROJ                 (*Projection*)
| EOF                  (*End of code*)

|  ID of string;;        (* variable identifier, alphanumeric string with first char lowercase *)

exception Foo of string 


let removeplus t = let temp = String.length t in
					if String.get t 0 == '+'
					then int_of_string(String.sub t 1 (temp - 1))
					else
					int_of_string t

# 49 "a2.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\232\255\233\255\069\000\001\000\001\000\000\000\001\000\
    \239\255\240\255\241\255\000\000\011\000\001\000\245\255\246\255\
    \006\000\007\000\249\255\250\255\251\255\000\000\160\000\244\000\
    \255\255\063\001\073\001\092\001\000\000\252\255\009\000\248\255\
    \004\000\247\255\244\255\243\255\012\000\242\255\001\000\238\255\
    \028\000\020\000\002\000\237\255\016\000\031\000\003\000\236\255\
    \004\000\235\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\021\000\023\000\023\000\023\000\023\000\
    \255\255\255\255\255\255\023\000\023\000\023\000\255\255\255\255\
    \023\000\023\000\255\255\255\255\255\255\023\000\002\000\001\000\
    \255\255\000\000\000\000\021\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\255\255\255\255\255\255\000\000\000\000\
    \255\255\255\255\000\000\000\000\000\000\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\000\000\255\255\000\000\
    \255\255\000\000\000\000\000\000\255\255\000\000\255\255\000\000\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\000\000\
    \255\255\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\039\000\043\000\047\000\049\000\000\000\000\000\000\000\
    \014\000\015\000\018\000\020\000\000\000\019\000\000\000\013\000\
    \024\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\035\000\000\000\009\000\008\000\010\000\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\022\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\023\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\012\000\034\000\000\000\000\000\
    \000\000\021\000\028\000\000\000\017\000\005\000\004\000\038\000\
    \040\000\007\000\048\000\032\000\027\000\044\000\011\000\036\000\
    \030\000\033\000\016\000\029\000\006\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\031\000\
    \037\000\041\000\042\000\045\000\046\000\000\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \000\000\000\000\000\000\000\000\027\000\000\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\000\000\000\000\000\000\027\000\
    \255\255\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\000\000\
    \000\000\000\000\000\000\027\000\000\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\026\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\027\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\000\000\
    \000\000\000\000\000\000\027\000\000\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\038\000\042\000\046\000\048\000\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\255\255\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\012\000\255\255\000\000\000\000\000\000\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\000\000\013\000\255\255\255\255\
    \255\255\000\000\021\000\255\255\000\000\000\000\000\000\007\000\
    \006\000\000\000\004\000\016\000\003\000\005\000\000\000\011\000\
    \017\000\032\000\000\000\028\000\000\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\030\000\
    \036\000\040\000\041\000\044\000\045\000\255\255\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \255\255\255\255\255\255\255\255\003\000\255\255\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\022\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\255\255\255\255\255\255\255\255\022\000\
    \000\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\023\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\255\255\
    \255\255\255\255\255\255\023\000\255\255\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\027\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\255\255\
    \255\255\255\255\255\255\027\000\255\255\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec main lexbuf =
   __ocaml_lex_main_rec lexbuf 0
and __ocaml_lex_main_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
let
# 103 "a2.mll"
              i
# 251 "a2.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 103 "a2.mll"
                      ( INT (int_of_string i))
# 255 "a2.ml"

  | 1 ->
# 104 "a2.mll"
                      ( (BOOL (true)) :: main lexbuf)
# 260 "a2.ml"

  | 2 ->
# 105 "a2.mll"
                      ( (BOOL (false)) :: main lexbuf)
# 265 "a2.ml"

  | 3 ->
# 107 "a2.mll"
                      ( ABS :: main lexbuf )
# 270 "a2.ml"

  | 4 ->
# 108 "a2.mll"
                      ( PLUS :: main lexbuf )
# 275 "a2.ml"

  | 5 ->
# 109 "a2.mll"
                      ( MINUS :: main lexbuf )
# 280 "a2.ml"

  | 6 ->
# 110 "a2.mll"
                      ( TIMES :: main lexbuf )
# 285 "a2.ml"

  | 7 ->
# 111 "a2.mll"
                      ( DIV :: main lexbuf )
# 290 "a2.ml"

  | 8 ->
# 112 "a2.mll"
                      ( REM :: main lexbuf )
# 295 "a2.ml"

  | 9 ->
# 114 "a2.mll"
                      ( RP :: main lexbuf )
# 300 "a2.ml"

  | 10 ->
# 115 "a2.mll"
                      ( LP :: main lexbuf )
# 305 "a2.ml"

  | 11 ->
# 117 "a2.mll"
                      ( CONJ :: main lexbuf )
# 310 "a2.ml"

  | 12 ->
# 118 "a2.mll"
                      ( DISJ :: main lexbuf )
# 315 "a2.ml"

  | 13 ->
# 119 "a2.mll"
                      ( NOT :: main lexbuf )
# 320 "a2.ml"

  | 14 ->
# 121 "a2.mll"
                      ( GT :: main lexbuf )
# 325 "a2.ml"

  | 15 ->
# 122 "a2.mll"
                      ( LT :: main lexbuf )
# 330 "a2.ml"

  | 16 ->
# 123 "a2.mll"
                      ( EQ :: main lexbuf )
# 335 "a2.ml"

  | 17 ->
# 125 "a2.mll"
                      ( IF :: main lexbuf )
# 340 "a2.ml"

  | 18 ->
# 126 "a2.mll"
                      ( THEN :: main lexbuf )
# 345 "a2.ml"

  | 19 ->
# 127 "a2.mll"
                      ( ELSE :: main lexbuf )
# 350 "a2.ml"

  | 20 ->
# 128 "a2.mll"
                      ( FI :: main lexbuf )
# 355 "a2.ml"

  | 21 ->
let
# 130 "a2.mll"
                r
# 361 "a2.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 130 "a2.mll"
                      ( (ID r):: main lexbuf )
# 365 "a2.ml"

  | 22 ->
# 132 "a2.mll"
                      ( main lexbuf)
# 370 "a2.ml"

  | 23 ->
# 134 "a2.mll"
                      ( raise(Foo "Bad Input"))
# 375 "a2.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_main_rec lexbuf __ocaml_lex_state

;;

# 137 "a2.mll"
  let scanner s = main ( Lexing.from_string s)  
# 384 "a2.ml"
